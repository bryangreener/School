DAA Notes 2018-01-11

Ways to Show an Algorithm Doesn't Work
- It doesnt finish
- Instance where output doesn't match input (output is incorrect)

Algorithm must be generalized (correctness)

Program is analagous to Algorithm
Programming Language is anagalous to Pseudocode
Run on Computer is analagous to Models of Computation

Models of Computation
    Specifies:
        - What operations an algorithm is allowed
        - Cost (time/space) of each operations
    
    ex.
        O(n^2), n != infinity
        for(i = 0 -> n)
            for(j = 0 -> n)
                Computation

        Limitations:
            - n is outside data type
            - The computation in the nested loop has an unknown complexity
    
Computational Efficiency
    - Running Time: We want the algorithm to run quickly

    Definitions of efficient algorithms (worst to best):
    Def 1: Algorithm is efficient if when implemented it runs quickly on real input instances.
    Def 2: Algorithm is efficient if it achieves qualitatively better worst-case performance than brute force.
    Def 3: Algorithm is efficient if it has a polynomial run time.
            - Polynomial Def: Suppose c > 0, d > 0. For every input-instance of size N, runtime is c(N^d).
                - cN^100 is an example of an NP-hard problem (Classes of problems where we don't know polynomial solutions)

    